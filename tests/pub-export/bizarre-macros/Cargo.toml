# WARNING - AUTOMATICALLY GENERATED
# This file is generated by maint/update-bizarre from macros/Cargo.toml
# See tests/pub-export/pub-b/pub-b.rs for the general explanation
# of the bizarre-* crates.

[package]
name = "bizarre-derive-adhoc-macros"
version = "0.0.666"
edition = "2018"
authors=["Ian Jackson <ijackson@chiark.greenend.org.uk>",
         "and the contributors to Rust derive-adhoc"]
license = "MIT"
description="Bizarrely incompatible copy of derive-adhoc-macros, for testing"

publish = false


[features]
bizarre = []
default = ["bizarre"]
case = ["heck"]
expect = ["sha3", "syn/full"]

[dependencies]
itertools = "0.10.1"
proc-macro-crate = "1.1.3"
proc-macro2 = "1"
quote = "1"
sha3 = { version = "0.10", optional = true }
strum = { version = "0.24", features = ["derive"] }
syn = { version = "1.0.61", features = ["extra-traits"] }
void = "1"

heck = { version = "0.4", optional = true }

# This dependency isn't required, but it causes cargo to
# arrange that the crates tests/compat/old-*  get -macros 0.2.0.
# (derive-adhoc 0.2.0 was published with a "0.2.0" dependency on -macros,
# not "=0.2.0" as we do nowadays; but having *anything* that wants precisely
# 0.2.0 means that cargo satisfies even "0.2.0" with preecisely 0.2.0.)
#
# This dependency could be *anywhere* in the workspace, but putting it
# in a package that is actually using derive-adhoc macros (ie, a normal
# crate) causes trouble for `proc_macro_crate`'s attempts to find the
# actual derive-adhoc-macros it wants to use.
# But, here, nothing looks at it.  So we can have it just for the side effect.
dummy-derive-adhoc-macros = { package = "derive-adhoc-macros", version = "=0.2.0" }
[lib]
path = "../../../macros/macros.rs"
doc = false
doctest = false
proc-macro = true
